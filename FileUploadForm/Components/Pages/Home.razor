@page "/"
@rendermode InteractiveServer
@using FileUploadForm.Abstractions
@using FileUploadForm.Models
@using System.ComponentModel.DataAnnotations

@inject IBlobStorageService BlobStorageService

<PageTitle>File Upload</PageTitle>

<EditForm EditContext="@editContext" OnSubmit="UploadFile">

    <DataAnnotationsValidator />

    <p>
        Select File:<br />
        <InputFile id="client_file" OnChange="OnSelectedFile" />
    </p>
    <p>
        Email:<br />
        <InputText id="client_email" @bind-Value="formModel.Email" />
    </p>
    <button type="submit">Submit</button>
    <p>


        @if(isLoading)
        {
            <span>Loading...</span>
        }else
        {
            <span>@response?.Status</span>
        }
    </p>
    <ValidationSummary />

</EditForm>

@if(response != null)
{
    <p>@response.Blob.ContentType</p>
}

@code 
{
    EditContext? editContext;
    FormModel formModel = new();

    ResponseDTO? response;

    bool isLoading;

    protected override void OnInitialized()
    {
        editContext = new(formModel);
    }

    private void OnSelectedFile(InputFileChangeEventArgs e)
    {
        formModel.File = e.File;
    }

    private async Task UploadFile()
    {
        isLoading = true;
        if (editContext != null && editContext.Validate())
            response = await BlobStorageService.Upload(formModel.File);

        isLoading = false;
    }
}